{"version":3,"file":"ngforage.umd.js.map","sources":["ng://ngforage/lib/misc/setToStringTag.function.ts","ng://ngforage/lib/cache/cached-item-impl.class.ts","node_modules/tslib/tslib.es6.js","ng://ngforage/lib/imports/localforage.ts","ng://ngforage/lib/misc/driver.enum.ts","ng://ngforage/lib/misc/injection-tokens.ts","ng://ngforage/lib/config/ng-forage-config.service.ts","ng://ngforage/lib/instance-factory/instance-factory.service.ts","ng://ngforage/lib/config/base-configurable-impl.service.ts","ng://ngforage/lib/main/ng-forage.service.ts","ng://ngforage/lib/cache/ng-forage-cache.service.ts","ng://ngforage/lib/dedicated/ng-forage-cache-dedicated.class.ts","ng://ngforage/lib/dedicated/ng-forage-dedicated.class.ts","ng://ngforage/lib/dedicated/dedicated-instance-factory.service.ts","ng://ngforage/lib/NgForage.module.ts"],"sourcesContent":["/** @internal */\nexport function setToStringTag(clazz: Function, tag?: string): void {\n  Object.defineProperty(clazz.prototype, Symbol.toStringTag, {\n    configurable: false,\n    enumerable: false,\n    value: tag || clazz.name,\n    writable: false\n  });\n}\n","import {setToStringTag} from '../misc/setToStringTag.function';\nimport {CachedItem} from './cached-item';\n\n/** @internal */\nexport class CachedItemImpl<T> implements CachedItem<T> {\n\n  public readonly expires: Date;\n\n  public constructor(public readonly data: T, expiryTime: number) {\n    this.expires = new Date(typeof <any>expiryTime === 'number' ? expiryTime : 0);\n  }\n\n  public get expired(): boolean {\n    const value = this.expiresIn === 0;\n    if (value) {\n      Object.defineProperty(this, 'expired', {value});\n    }\n\n    return value;\n  }\n\n  public get expiresIn(): number {\n    const value = Math.max(0, this.expires.getTime() - Date.now());\n    if (!value) {\n      Object.defineProperty(this, 'expiresIn', {value});\n    }\n\n    return value;\n  }\n\n  public get hasData(): boolean {\n    const value = this.data != null; //tslint:disable-line:triple-equals\n    Object.defineProperty(this, 'hasData', {value});\n\n    return value;\n  }\n\n  public toJSON(): CachedItem<T> {\n    return {\n      data: this.data,\n      expired: this.expired,\n      expires: this.expires,\n      expiresIn: this.expiresIn,\n      hasData: this.hasData\n    };\n  }\n\n  public toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nsetToStringTag(CachedItemImpl, 'CachedItem');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as lf from 'localforage';\n\n/** @internal */\nexport const localForage: LocalForage = 'defineDriver' in lf ? lf : lf['default'];\n","import {localForage as lf} from '../imports/localforage';\n\nexport enum Driver {\n  /** The IndexedDB driver */\n  INDEXED_DB = <any>lf.INDEXEDDB,\n  /** The localStorage driver */\n  LOCAL_STORAGE = <any>lf.LOCALSTORAGE,\n  /** The WebSQL driver */\n  WEB_SQL = <any>lf.WEBSQL\n}\n\nfor (const d of [lf.INDEXEDDB, lf.LOCALSTORAGE, lf.WEBSQL]) {\n  delete Driver[d];\n}\n\nObject.freeze(Driver);\n","import {InjectionToken} from '@angular/core';\nimport {NgForageOptions} from '../config/ng-forage-options';\n\nexport const DEFAULT_CONFIG = new InjectionToken<NgForageOptions>('Default NgForage config');\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport 'localforage';\nimport {localForage as lf} from '../imports/localforage';\nimport {DriverType} from '../misc/driver-type.type';\nimport {Driver} from '../misc/driver.enum';\nimport {DEFAULT_CONFIG} from '../misc/injection-tokens';\nimport {setToStringTag} from '../misc/setToStringTag.function';\nimport {BaseConfigurable} from './base-configurable';\nimport {CacheConfigurable} from './cache-configurable';\nimport {NgForageOptions} from './ng-forage-options';\n\n/** @internal */\nconst $defaultConfig: unique symbol = Symbol('Default Config');\n\n/**\n * Global/default configuration\n */\n@Injectable({providedIn: 'root'})\nexport class NgForageConfig implements BaseConfigurable, CacheConfigurable {\n\n  /** @internal */\n  private readonly [$defaultConfig]: NgForageOptions;\n\n  public constructor(@Optional() @Inject(DEFAULT_CONFIG) conf: NgForageOptions) {\n    this[$defaultConfig] = {\n      cacheTime: 300000,\n      description: '',\n      driver: [Driver.INDEXED_DB, Driver.WEB_SQL, Driver.LOCAL_STORAGE],\n      name: 'ngForage',\n      size: 4980736,\n      storeName: 'ng_forage',\n      version: 1\n    };\n    if (conf) {\n      this.configure(conf);\n    }\n  }\n\n  /**\n   * Cache time in milliseconds\n   * @default 300000\n   */\n  public get cacheTime(): number {\n    return <number>this[$defaultConfig].cacheTime;\n  }\n\n  public set cacheTime(t: number) {\n    this[$defaultConfig].cacheTime = t;\n  }\n\n  /**\n   * Get the compiled configuration\n   */\n  public get config(): NgForageOptions {\n    return {\n      cacheTime: this.cacheTime,\n      description: this.description,\n      driver: this.driver,\n      name: this.name,\n      size: this.size,\n      storeName: this.storeName,\n      version: this.version\n    };\n  }\n\n  /**\n   * A description of the database, essentially for developer usage.\n   * @default\n   */\n  public get description(): string {\n    return <string>this[$defaultConfig].description;\n  }\n\n  public set description(v: string) {\n    this[$defaultConfig].description = v;\n  }\n\n  /**\n   * The preferred driver(s) to use.\n   */\n  public get driver(): DriverType | DriverType[] {\n    if (typeof this[$defaultConfig].driver === 'string') {\n      return <string>this[$defaultConfig].driver;\n    }\n\n    return (<string[]>this[$defaultConfig].driver).slice();\n  }\n\n  public set driver(v: DriverType | DriverType[]) {\n    this[$defaultConfig].driver = v;\n  }\n\n  /**\n   * The name of the database. May appear during storage limit prompts. Useful to use the name of your app here.\n   * In localStorage, this is used as a key prefix for all keys stored in localStorage.\n   * @default ngForage\n   */\n  public get name(): string {\n    return <string>this[$defaultConfig].name;\n  }\n\n  public set name(v: string) {\n    this[$defaultConfig].name = v;\n  }\n\n  /**\n   * The size of the database in bytes. Used only in WebSQL for now.\n   * @default 4980736\n   */\n  public get size(): number {\n    return <number>this[$defaultConfig].size;\n  }\n\n  public set size(v: number) {\n    this[$defaultConfig].size = v;\n  }\n\n  /**\n   * The name of the datastore.\n   * In IndexedDB this is the dataStore,\n   * in WebSQL this is the name of the key/value table in the database.\n   * Must be alphanumeric, with underscores.\n   * Any non-alphanumeric characters will be converted to underscores.\n   * @default ng_forage\n   */\n  public get storeName(): string {\n    return <string>this[$defaultConfig].storeName;\n  }\n\n  public set storeName(v: string) {\n    this[$defaultConfig].storeName = v;\n  }\n\n  /**\n   * The version of your database. May be used for upgrades in the future; currently unused.\n   * @default 1.0\n   */\n  public get version(): number {\n    return <number>this[$defaultConfig].version;\n  }\n\n  public set version(v: number) {\n    this[$defaultConfig].version = v;\n  }\n\n  /**\n   * Bulk-set configuration options\n   * @param opts The configuration\n   */\n  public configure(opts: NgForageOptions): this {\n    opts = opts || {};\n\n    if (opts.driver && (<any[]>opts.driver).slice) {\n      opts.driver = (<DriverType[]>opts.driver).slice();\n    }\n\n    Object.assign(this[$defaultConfig], opts);\n\n    return this;\n  }\n\n  /**\n   * Define a driver\n   *\n   * Youâll want to make sure you accept a callback argument and that you pass the same arguments to callbacks as the\n   * default drivers do. Youâll also want to resolve or reject promises.\n   * Check any of the {@link https://github.com/mozilla/localForage/tree/master/src/drivers default drivers}\n   * for an idea of how to implement your own, custom driver.\n   * @param spec Driver spec\n   */\n  public defineDriver(spec: LocalForageDriver): Promise<void> {\n    return lf.defineDriver(spec);\n  }\n\n  /** @internal */\n  public toJSON(): NgForageOptions {\n    return this.config;\n  }\n\n  public toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nsetToStringTag(NgForageConfig);\n","import {Injectable} from '@angular/core';\nimport 'localforage';\nimport {NgForageConfig} from '../config/ng-forage-config.service';\nimport {NgForageOptions} from '../config/ng-forage-options';\nimport {localForage as lf} from '../imports/localforage';\nimport {DriverType} from '../misc/driver-type.type';\nimport {setToStringTag} from '../misc/setToStringTag.function';\n\n/** @internal */\ninterface InstanceMap {\n  [hash: string]: LocalForage;\n}\n\n/** @internal */\nconst stores: InstanceMap = {};\n\n/** @internal */\nfunction getDriverString(driver?: DriverType | DriverType[]): string {\n  if (!driver) {\n    return '';\n  } else if (Array.isArray(driver)) {\n    return driver.slice().sort().join(',');\n  } else {\n    return <string>driver;\n  }\n}\n\n/** @internal */\nfunction getHash(cfg: NgForageOptions): string {\n  return [\n    getDriverString(cfg.driver),\n    cfg.name,\n    cfg.size,\n    cfg.storeName,\n    cfg.version,\n    cfg.description,\n    cfg.cacheTime\n  ].join('|');\n}\n\n/** @internal */\nconst conf$ = Symbol('Config');\n\n/**\n * Creates localForage instances\n */\n@Injectable({providedIn: 'root'})\nexport class InstanceFactory {\n\n  /** @internal */\n  public constructor(conf: NgForageConfig) {\n    this[conf$] = conf;\n  }\n\n  public getInstance(cfg: NgForageOptions): LocalForage {\n    cfg = Object.assign({}, this[conf$].config, cfg || {});\n    const hash = getHash(cfg);\n\n    if (!stores[hash]) {\n      stores[hash] = lf.createInstance(cfg);\n    }\n\n    return stores[hash];\n  }\n}\n\nsetToStringTag(InstanceFactory);\n","import {Inject} from '@angular/core';\nimport 'localforage';\nimport {InstanceFactory} from '../instance-factory/instance-factory.service';\nimport {DriverType} from '../misc/driver-type.type';\nimport {setToStringTag} from '../misc/setToStringTag.function';\nimport {BaseConfigurable} from './base-configurable';\nimport {NgForageConfig} from './ng-forage-config.service';\nimport {NgForageOptions} from './ng-forage-options';\n\n/** @internal */\nconst store$: unique symbol = Symbol('Store');\n\n/**\n * Abstract service-level configuration layer for NgForage\n */\nexport abstract class BaseConfigurableImpl implements BaseConfigurable {\n\n  /** @internal */\n  protected readonly baseConfig: NgForageConfig;\n\n  /** @internal */\n  protected readonly config: NgForageOptions = {};\n\n  /** @internal */\n  protected readonly fact: InstanceFactory;\n\n  /** @internal */\n  protected storeNeedsRecalc: boolean;\n\n  /** @internal */\n  public constructor(@Inject(NgForageConfig) config: NgForageConfig,\n                     @Inject(InstanceFactory) instanceFactory: InstanceFactory) {\n    this.baseConfig = config;\n    this.fact = instanceFactory;\n  }\n\n  /**\n   * A description of the database, essentially for developer usage.\n   * @default \"\"\n   */\n  public get description(): string {\n    return this.config.description || this.baseConfig.description;\n  }\n\n  public set description(v: string) {\n    this.config.description = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The preferred driver(s) to use.\n   * @default IndexedDB, WebSQL and localStorage\n   */\n  public get driver(): DriverType | DriverType[] {\n    return this.config.driver || this.baseConfig.driver;\n  }\n\n  public set driver(v: DriverType | DriverType[]) {\n    this.config.driver = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The name of the database. May appear during storage limit prompts. Useful to use the name of your app here.\n   * In localStorage, this is used as a key prefix for all keys stored in localStorage.\n   * @default ngForage\n   */\n  public get name(): string {\n    return this.config.name || this.baseConfig.name;\n  }\n\n  public set name(v: string) {\n    this.config.name = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The size of the database in bytes. Used only in WebSQL for now.\n   * @default 4980736\n   */\n  public get size(): number {\n    return this.config.size || this.baseConfig.size;\n  }\n\n  public set size(v: number) {\n    this.config.size = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The name of the datastore.\n   * In IndexedDB this is the dataStore,\n   * in WebSQL this is the name of the key/value table in the database.\n   * Must be alphanumeric, with underscores.\n   * Any non-alphanumeric characters will be converted to underscores.\n   * @default ng_forage\n   */\n  public get storeName(): string {\n    return this.config.storeName || this.baseConfig.storeName;\n  }\n\n  public set storeName(v: string) {\n    this.config.storeName = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The version of your database. May be used for upgrades in the future; currently unused.\n   * @default 1.0\n   */\n  public get version(): number {\n    return 'version' in this.config ? <number>this.config.version : this.baseConfig.version;\n  }\n\n  public set version(v: number) {\n    this.config.version = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /** @internal */\n  protected get finalConfig(): NgForageOptions {\n    return Object.assign(\n      {},\n      this.baseConfig.config,\n      this.config\n    );\n  }\n\n  /** @internal */\n  protected get store(): LocalForage {\n    if (this.storeNeedsRecalc || !this[store$]) {\n      this[store$] = this.fact.getInstance(this.finalConfig);\n      this.storeNeedsRecalc = false;\n    }\n\n    return this[store$];\n  }\n\n  /**\n   * Bulk-set configuration options\n   * @param opts The configuration\n   */\n  public configure(opts: NgForageOptions): this {\n    opts = opts || {};\n\n    if (Array.isArray(opts.driver)) {\n      opts.driver = opts.driver.slice();\n    }\n\n    Object.assign(this.config, opts);\n    this.storeNeedsRecalc = true;\n\n    return this;\n  }\n\n  public toJSON(): Partial<NgForageOptions> {\n    return {\n      description: this.description,\n      driver: this.driver,\n      name: this.name,\n      size: this.size,\n      storeName: this.storeName,\n      version: this.version\n    };\n  }\n\n  public toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nsetToStringTag(BaseConfigurableImpl, 'BaseConfigurable');\nObject.defineProperty(<any>BaseConfigurableImpl, 'storeNeedsRecalc', {\n  configurable: true,\n  enumerable: true,\n  value: true,\n  writable: true\n});\n","import {Injectable} from '@angular/core';\nimport {BaseConfigurable} from '../config/base-configurable';\nimport {BaseConfigurableImpl} from '../config/base-configurable-impl.service';\nimport {NgForageOptions} from '../config/ng-forage-options';\nimport {DriverType} from '../misc/driver-type.type';\nimport {Driver} from '../misc/driver.enum';\nimport {setToStringTag} from '../misc/setToStringTag.function';\n\n/**\n * Cache instance\n */\n@Injectable({providedIn: 'root'})\nexport class NgForage extends BaseConfigurableImpl implements BaseConfigurable {\n\n  /**\n   * Returns the name of the driver being used, or null if none can be used.\n   */\n  public get activeDriver(): DriverType {\n    return this.store.driver();\n  }\n\n  /**\n   * Removes every key from the database, returning it to a blank slate.\n   *\n   * clear() will remove <b>every item in the offline store</b>. Use this method with caution.\n   */\n  public clear(): Promise<void> {\n    return this.store.clear();\n  }\n\n  /**\n   * Make a clone of the instance\n   * @param config Optional configuration\n   */\n  public clone(config?: NgForageOptions): NgForage {\n    const inst = new NgForage(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n\n  /**\n   * Gets an item from the storage library.\n   * If the key does not exist, getItem() will return null.\n   * @param key Data key\n   */\n  public getItem<T>(key: string): Promise<T> {\n    return this.store.getItem<T>(key);\n  }\n\n  /**\n   * Iterate over all value/key pairs in datastore.\n   * <i>iteratee</i> is called once for each pair, with the following arguments:\n   * <ol>\n   *   <li>Value</li>\n   *   <li>Key</li>\n   *   <li>iterationNumber - one-based number</li>\n   * </ol>\n   * iterate() supports early exit by returning non undefined value inside iteratorCallback callback.\n   * @param iteratee\n   */\n  public iterate<T, U>(iteratee: (value: T, key: string, iterationNumber: number) => U): Promise<U> {\n    return this.store.iterate(iteratee);\n  }\n\n  /**\n   * Get the name of a key based on its ID.\n   * @param index\n   */\n  public key(index: number): Promise<string> {\n    return this.store.key(index);\n  }\n\n  /**\n   * Get the list of all keys in the datastore.\n   */\n  public keys(): Promise<string[]> {\n    return this.store.keys();\n  }\n\n  /**\n   * Gets the number of keys in the offline store (i.e. its âlengthâ).\n   */\n  public length(): Promise<number> {\n    return this.store.length();\n  }\n\n  /**\n   * Even though localForage queues up all of its data API method calls,\n   * ready() provides a way to determine whether the asynchronous driver initialization process has finished.\n   * Thatâs useful in cases like when we want to know which driver localForage has settled down using.\n   */\n  public ready(): Promise<void> {\n    return this.store.ready();\n  }\n\n  /**\n   * Removes the value of a key from the offline store.\n   * @param key Data key\n   */\n  public removeItem(key: string): Promise<void> {\n    return this.store.removeItem(key);\n  }\n\n  /**\n   * Saves data to an offline store. You can store the following types of JavaScript objects:\n   * <ul>\n   *  <li>Array</li>\n   *  <li>ArrayBuffer</li>\n   *  <li>Blob</li>\n   *  <li>Float32Array</li>\n   *  <li>Float64Array</li>\n   *  <li>Int8Array</li>\n   *  <li>Int16Array</li>\n   *  <li>Int32Array</li>\n   *  <li>Number</li>\n   *  <li>Object</li>\n   *  <li>Uint8Array</li>\n   *  <li>Uint8ClampedArray</li>\n   *  <li>Uint16Array</li>\n   *  <li>Uint32Array</li>\n   *  <li>String</li>\n   * </ul>\n   * @param key Data key\n   * @param data Data\n   */\n  public setItem<T>(key: string, data: T): Promise<T> {\n    return this.store.setItem<T>(key, data);\n  }\n\n  /**\n   * Check whether the given driver is supported/registered.\n   * @param driver Driver name\n   */\n  public supports(driver: Driver | string): boolean {\n    return this.store.supports(<string>driver);\n  }\n}\n\nsetToStringTag(NgForage);\n","import {Injectable} from '@angular/core';\nimport {CacheConfigurable} from '../config/cache-configurable';\nimport {NgForageOptions} from '../config/ng-forage-options';\nimport {NgForage} from '../main/ng-forage.service';\nimport {setToStringTag} from '../misc/setToStringTag.function';\nimport {CachedItem} from './cached-item';\nimport {CachedItemImpl} from './cached-item-impl.class';\n\n/** @internal */\ninterface CacheKeys {\n  data: string;\n\n  expiry: string;\n}\n\n/** @internal */\nfunction calculateCacheKeys(mainKey: string): CacheKeys {\n  return {\n    data: `${mainKey}_data`,\n    expiry: `${mainKey}_expiry`\n  };\n}\n\n/** @internal */\nfunction toCachedItem<T>(r: [T, number]): CachedItem<T> {\n  return new CachedItemImpl<T>(r[0], r[1]);\n}\n\n/** @internal */\nfunction head<T>(r: [T, number]) {\n  return r[0];\n}\n\n/** @internal */\n// tslint:disable-next-line:no-empty\nfunction toVoid(): void {\n\n}\n\n/**\n * An extension of {@link NgForage} which adds expiration support\n */\n@Injectable({providedIn: 'root'})\nexport class NgForageCache extends NgForage implements CacheConfigurable {\n\n  /**\n   * Cache time in milliseconds\n   * @default 300000\n   */\n  public get cacheTime(): number {\n    return this.config.cacheTime || this.baseConfig.cacheTime;\n  }\n\n  public set cacheTime(t: number) {\n    this.config.cacheTime = t;\n    this.storeNeedsRecalc = true;\n  }\n\n  /** @inheritDoc */\n  public clone(config?: NgForageOptions): NgForageCache {\n    const inst = new NgForageCache(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n\n  /**\n   * Retrieve data\n   * @param key Data key\n   */\n  public getCached<T>(key: string): Promise<CachedItem<T>> {\n    const keys = calculateCacheKeys(key);\n    const dataPromise = this.getItem<T>(keys.data);\n    const expiryPromise = this.getItem<number>(keys.expiry);\n\n    return Promise.all([dataPromise, expiryPromise]).then(toCachedItem);\n  }\n\n  /**\n   * Remove data\n   * @param key Data key\n   */\n  public removeCached(key: string): Promise<void> {\n    const keys = calculateCacheKeys(key);\n\n    const dataPromise = this.removeItem(keys.data);\n    const expiryPromise = this.removeItem(keys.expiry);\n\n    return Promise.all([dataPromise, expiryPromise]).then(toVoid);\n  }\n\n  /**\n   * Set data\n   * @param key Data key\n   * @param data Data to set\n   * @param [cacheTime] Override cache set in {@link CacheConfigurable#cacheTime global or instance config}.\n   */\n  public setCached<T>(key: string, data: T, cacheTime?: number): Promise<T> {\n    const keys = calculateCacheKeys(key);\n    const expiry = typeof cacheTime === 'number' ? cacheTime : this.cacheTime;\n\n    const dataPromise = this.setItem<T>(keys.data, data);\n    const expiryPromise = this.setItem<number>(keys.expiry, Date.now() + expiry);\n\n    return Promise.all([dataPromise, expiryPromise]).then(head);\n  }\n\n  /** @internal */\n  public toJSON(): NgForageOptions {\n    const ass: Partial<NgForageOptions> = {cacheTime: this.cacheTime};\n\n    return Object.assign(super.toJSON(), ass);\n  }\n}\n\nsetToStringTag(NgForageCache);\n","import {NgForageCache} from '../cache/ng-forage-cache.service';\nimport {NgForageOptions} from '../config/ng-forage-options';\nimport {setToStringTag} from '../misc/setToStringTag.function';\n\n/** @internal */\nexport class NgForageCacheDedicated extends NgForageCache {\n\n  public clone(config?: NgForageOptions): NgForageCache {\n    const inst = new NgForageCacheDedicated(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n}\n\nsetToStringTag(NgForageCacheDedicated, 'NgForageCache (dedicated)');\n","import {NgForageOptions} from '../config/ng-forage-options';\nimport {NgForage} from '../main/ng-forage.service';\nimport {setToStringTag} from '../misc/setToStringTag.function';\n\n/** @internal */\nexport class NgForageDedicated extends NgForage {\n\n  public clone(config?: NgForageOptions): NgForage {\n    const inst = new NgForageDedicated(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n}\n\nsetToStringTag(NgForageDedicated, 'NgForage (dedicated)');\n","import {Injectable} from '@angular/core';\nimport {NgForageCache} from '../cache/ng-forage-cache.service';\nimport {NgForageConfig} from '../config/ng-forage-config.service';\nimport {NgForageOptions} from '../config/ng-forage-options';\nimport {InstanceFactory} from '../instance-factory/instance-factory.service';\nimport {NgForage} from '../main/ng-forage.service';\nimport {setToStringTag} from '../misc/setToStringTag.function';\nimport {NgForageCacheDedicated} from './ng-forage-cache-dedicated.class';\nimport {NgForageDedicated} from './ng-forage-dedicated.class';\n\n/** @internal */\nconst conf$: unique symbol = Symbol('NgForageConfig');\n/** @internal */\nconst if$: unique symbol = Symbol('InstanceFactory');\n\n@Injectable({providedIn: 'root'})\nexport class DedicatedInstanceFactory {\n\n  /** @internal */\n  private readonly [conf$]: NgForageConfig;\n\n  /** @internal */\n  private readonly [if$]: InstanceFactory;\n\n  public constructor(conf: NgForageConfig, instFact: InstanceFactory) {\n    this[conf$] = conf;\n    this[if$] = instFact;\n  }\n\n  public createCache(config?: NgForageOptions): NgForageCache {\n    const inst = new NgForageCacheDedicated(this[conf$], this[if$]);\n    if (config) {\n      inst.configure(config);\n    }\n\n    return inst;\n  }\n\n  public createNgForage(config?: NgForageOptions): NgForage {\n    const inst = new NgForageDedicated(this[conf$], this[if$]);\n    if (config) {\n      inst.configure(config);\n    }\n\n    return inst;\n  }\n}\n\nsetToStringTag(DedicatedInstanceFactory);\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {NgForageOptions} from './config/ng-forage-options';\nimport {DEFAULT_CONFIG} from './misc/injection-tokens';\n\n/**\n * NgForage core module\n */\n@NgModule({})\nexport class NgForageModule {\n\n  // istanbul ignore next\n  public static forRoot(config?: Partial<NgForageOptions>): ModuleWithProviders {\n    return {\n      ngModule: NgForageModule,\n      providers: [\n        {\n          provide: DEFAULT_CONFIG,\n          useValue: config ? Object.assign({}, config) : {}\n        }\n      ]\n    };\n  }\n}\n"],"names":["lf['default']","lf","tslib_1.__values","InjectionToken","Injectable","Optional","Inject","tslib_1.__extends","conf$","NgModule"],"mappings":"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"}
