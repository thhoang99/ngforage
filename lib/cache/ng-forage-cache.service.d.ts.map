{"version":3,"file":"ng-forage-cache.service.d.ts","sources":["C:/Users/Zero/bm4/node_modules/ngforage/lib/cache/ng-forage-cache.service.d.ts"],"sourcesContent":["import { CacheConfigurable } from '../config/cache-configurable';\nimport { NgForageOptions } from '../config/ng-forage-options';\nimport { NgForage } from '../main/ng-forage.service';\nimport { CachedItem } from './cached-item';\n/**\n * An extension of {@link NgForage} which adds expiration support\n */\nexport declare class NgForageCache extends NgForage implements CacheConfigurable {\n    /**\n     * Cache time in milliseconds\n     * @default 300000\n     */\n    cacheTime: number;\n    /** @inheritDoc */\n    clone(config?: NgForageOptions): NgForageCache;\n    /**\n     * Retrieve data\n     * @param key Data key\n     */\n    getCached<T>(key: string): Promise<CachedItem<T>>;\n    /**\n     * Remove data\n     * @param key Data key\n     */\n    removeCached(key: string): Promise<void>;\n    /**\n     * Set data\n     * @param key Data key\n     * @param data Data to set\n     * @param [cacheTime] Override cache set in {@link CacheConfigurable#cacheTime global or instance config}.\n     */\n    setCached<T>(key: string, data: T, cacheTime?: number): Promise<T>;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;"}