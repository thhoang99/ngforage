{"version":3,"file":"ng-forage-config.service.d.ts","sources":["C:/Users/Zero/bm4/node_modules/ngforage/lib/config/ng-forage-config.service.d.ts"],"sourcesContent":["import 'localforage';\nimport { DriverType } from '../misc/driver-type.type';\nimport { BaseConfigurable } from './base-configurable';\nimport { CacheConfigurable } from './cache-configurable';\nimport { NgForageOptions } from './ng-forage-options';\n/**\n * Global/default configuration\n */\nexport declare class NgForageConfig implements BaseConfigurable, CacheConfigurable {\n    constructor(conf: NgForageOptions);\n    /**\n     * Cache time in milliseconds\n     * @default 300000\n     */\n    cacheTime: number;\n    /**\n     * Get the compiled configuration\n     */\n    readonly config: NgForageOptions;\n    /**\n     * A description of the database, essentially for developer usage.\n     * @default\n     */\n    description: string;\n    /**\n     * The preferred driver(s) to use.\n     */\n    driver: DriverType | DriverType[];\n    /**\n     * The name of the database. May appear during storage limit prompts. Useful to use the name of your app here.\n     * In localStorage, this is used as a key prefix for all keys stored in localStorage.\n     * @default ngForage\n     */\n    name: string;\n    /**\n     * The size of the database in bytes. Used only in WebSQL for now.\n     * @default 4980736\n     */\n    size: number;\n    /**\n     * The name of the datastore.\n     * In IndexedDB this is the dataStore,\n     * in WebSQL this is the name of the key/value table in the database.\n     * Must be alphanumeric, with underscores.\n     * Any non-alphanumeric characters will be converted to underscores.\n     * @default ng_forage\n     */\n    storeName: string;\n    /**\n     * The version of your database. May be used for upgrades in the future; currently unused.\n     * @default 1.0\n     */\n    version: number;\n    /**\n     * Bulk-set configuration options\n     * @param opts The configuration\n     */\n    configure(opts: NgForageOptions): this;\n    /**\n     * Define a driver\n     *\n     * You’ll want to make sure you accept a callback argument and that you pass the same arguments to callbacks as the\n     * default drivers do. You’ll also want to resolve or reject promises.\n     * Check any of the {@link https://github.com/mozilla/localForage/tree/master/src/drivers default drivers}\n     * for an idea of how to implement your own, custom driver.\n     * @param spec Driver spec\n     */\n    defineDriver(spec: LocalForageDriver): Promise<void>;\n    toString(): string;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;"}